module RISC_V_ALU (
    input  [1:0] M,       // Selector de operación
    input  [31:0] A, B,  // Entradas A y B
    output [31:0] result // Resultado de la operación
);
begin
    reg [31:0] not_x3;
    
    always_comb 
        case(M)
            2'b00: begin // Suma con NOT al resultado
                not_x3 = ~(A + B);
            end
            2'b01: begin // Resta A - B
                not_x3 = A - B;
            end
            2'b10: begin // Resta B - A
                not_x3 = B - A;
            end
            2'b11: begin // AND lógico entre A y B
                not_x3 = A & B;
            end
            default: begin
                not_x3 = 32'b0;
            end
        endcase
    end
    
    assign result = not_x3; // Resultado enviado a LEDs
    
endmodule
