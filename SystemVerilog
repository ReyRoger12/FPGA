module operaciones_aritmeticas (
    input clk,                    // Reloj
    input reset,                  // Reset
    input [7:0] M,                // Selector de operación
    input [31:0] A,               // Operando A
    input [31:0] B,               // Operando B
    output reg [31:0] resultado   // Resultado de la operación
);

    // Definición de las operaciones
    always @(posedge clk or posedge reset) begin
        if (reset) begin
            resultado <= 32'b0;  // Reset al valor 0
        end else begin
            case (M)
                8'd0: resultado <= A + B;        // Suma
                8'd1: resultado <= A - B;        // Resta A - B
                8'd2: resultado <= B - A;        // Resta B - A
                8'd3: resultado <= A & B;        // AND
                8'd4: resultado <= A | B;        // OR
                8'd5: resultado <= A ^ B;        // XOR
                8'd6: resultado <= ~A;           // NOT A
                8'd7: resultado <= ~B;           // NOT B
                8'd8: resultado <= A * B;        // Multiplicación
                8'd9: resultado <= A / B;        // División
                8'd10: resultado <= A << 1;      // Desplazamiento a la izquierda
                8'd14: resultado <= fibonacci(A); // Fibonacci
                8'd15: resultado <= factorial(A); // Factorial
                8'd16: resultado <= potencia(A, B); // A^B
                8'd17: resultado <= A % B;        // Módulo
                8'd18: resultado <= raiz(A);       // Raíz cuadrada de A
                default: resultado <= 32'b0;      // Operación por defecto
            endcase
        end
    end

    // Función de Fibonacci
    function [31:0] fibonacci;
        input [31:0] n;
        integer i;
        reg [31:0] a, b, temp;
        begin
            a = 0;
            b = 1;
            for (i = 0; i < n; i = i + 1) begin
                temp = a + b;
                a = b;
                b = temp;
            end
            fibonacci = a;
        end
    endfunction

    // Función de Factorial
    function [31:0] factorial;
        input [31:0] n;
        integer i;
        reg [31:0] result;
        begin
            result = 1;
            for (i = 1; i <= n; i = i + 1) begin
                result = result * i;
            end
            factorial = result;
        end
    endfunction

    // Función de Potencia
    function [31:0] potencia;
        input [31:0] base, exponente;
        integer i;
        reg [31:0] result;
        begin
            result = 1;
            for (i = 0; i < exponente; i = i + 1) begin
                result = result * base;
            end
            potencia = result;
        end
    endfunction

    // Función de Raíz Cuadrada (aproximación simple)
    function [31:0] raiz;
        input [31:0] n;
        integer i;
        reg [31:0] res;
        begin
            res = 0;
            for (i = 0; i < n; i = i + 1) begin
                if (i * i > n) begin
                    res = i - 1;
                    break;
                end
            end
            raiz = res;
        end
    endfunction

endmodule


endmodule

